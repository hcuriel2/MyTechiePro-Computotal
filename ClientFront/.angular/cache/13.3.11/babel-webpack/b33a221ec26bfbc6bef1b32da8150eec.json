{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\n// this service let's use exchange a string message between two unrelated components\n// see contact us component for more detail\n// the two components must use this service, example contactus component and contact-us-dialog component\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor() {\n      this.messageSource = new BehaviorSubject(\"default message\");\n      this.currentMessage = this.messageSource.asObservable();\n    }\n    changeMessage(message) {\n      this.messageSource.next(message);\n    }\n  }\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)();\n  };\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module"}