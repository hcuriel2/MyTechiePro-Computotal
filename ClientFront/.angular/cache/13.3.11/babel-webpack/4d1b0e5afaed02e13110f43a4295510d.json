{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { User } from 'src/app/shared/models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/services/auth.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@ngx-translate/core\";\nfunction SignInComponent_mat_form_field_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 2);\n    i0.ɵɵelement(1, \"input\", 14);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(2, 1, \"Dictionary.Password\"));\n  }\n}\nfunction SignInComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Message.EmailSent\"), \" \");\n  }\n}\nfunction SignInComponent_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SignInComponent_button_26_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.signIn();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.formGroup.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"Dictionary.SignIn\"), \" \");\n  }\n}\nfunction SignInComponent_button_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SignInComponent_button_27_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.sendEmail();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r3.emailAddress.errors == null ? null : ctx_r3.emailAddress.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.isResetEmailSend ? i0.ɵɵpipeBind1(2, 2, \"Dictionary.ResendEmail\") : i0.ɵɵpipeBind1(3, 4, \"Dictionary.SendEmail\"), \" \");\n  }\n}\n//import { userInfo } from 'os';\nexport let SignInComponent = /*#__PURE__*/(() => {\n  class SignInComponent {\n    constructor(formBuilder, router, authService, dialogRef) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.dialogRef = dialogRef;\n    }\n    ngOnInit() {\n      this.emailAddress = new FormControl(null, Validators.required);\n      this.password = new FormControl(null, Validators.required);\n      this.authCode = new FormControl(null);\n      this.isResetPw = false;\n      this.isResetEmailSend = false;\n      this.formGroup = this.formBuilder.group({\n        emailAddress: this.emailAddress,\n        password: this.password,\n        authCode: this.authCode\n      });\n    }\n    close() {\n      this.dialogRef.close();\n    }\n    sendEmail() {\n      this.isResetEmailSend = true;\n      this.authService.sendEmailResetPw(this.emailAddress.value).pipe().subscribe(() => {\n        this.isResetEmailSend = true;\n      }, error => {\n        console.error('Email failed to send', error);\n      });\n      ;\n    }\n    toggleSignInForgotPw() {\n      this.isResetPw = !this.isResetPw;\n      this.isResetEmailSend = false;\n    }\n    //Redirects to signup page\n    createAccount() {\n      this.router.navigateByUrl('/sign-up');\n      this.dialogRef.close(null);\n    }\n    signIn() {\n      var _a;\n      const user = new User();\n      user.email = this.emailAddress.value;\n      user.password = this.password.value;\n      user.secret = (_a = this.authCode) === null || _a === void 0 ? void 0 : _a.value;\n      /**\n       * if signin success -> user data will be returned to app.component.ts\n       *\n       * Retrieves the 'user' item from localstorage and checks the usertype to correctly\n       * navigate to the corresponding URL.\n       */\n      this.authService.signIn(user).subscribe(user => {\n        this.authService.user.subscribe(currentUser => {\n          if (!currentUser) return;\n          