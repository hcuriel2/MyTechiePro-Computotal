{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/shared/services/auth.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@ngx-translate/core\";\nfunction SignInComponent_mat_form_field_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-form-field\", 2);\n    i0.ɵɵelement(1, \"input\", 14);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(2, 1, \"Dictionary.Password\"));\n  }\n}\nfunction SignInComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Message.EmailSent\"), \" \");\n  }\n}\nfunction SignInComponent_button_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SignInComponent_button_26_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.signIn();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.formGroup.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, \"Dictionary.SignIn\"), \" \");\n  }\n}\nfunction SignInComponent_button_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function SignInComponent_button_27_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.sendEmail();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r3.emailAddress.errors == null ? null : ctx_r3.emailAddress.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.isResetEmailSend ? i0.ɵɵpipeBind1(2, 2, \"Dictionary.ResendEmail\") : i0.ɵɵpipeBind1(3, 4, \"Dictionary.SendEmail\"), \" \");\n  }\n}\n//import { userInfo } from 'os';\nexport let SignInComponent = /*#__PURE__*/(() => {\n  class SignInComponent {\n    constructor(formBuilder, router, authService, dialogRef) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.dialogRef = dialogRef;\n    }\n    ngOnInit() {\n      this.emailAddress = new FormControl(null, Validators.required);\n      this.password = new FormControl(null, Validators.required);\n      this.authCode = new FormControl(null);\n      this.isResetPw = false;\n      this.isResetEmailSend = false;\n      this.formGroup = this.formBuilder.group({\n        emailAddress: this.emailAddress,\n        password: this.password,\n        authCode: this.authCode\n      });\n    }\n    close() {\n      this.dialogRef.close();\n    }\n    sendEmail() {\n      this.isResetEmailSend = true;\n      this.authService.sendEmailResetPw(this.emailAddress.value).pipe().subscribe(() => {\n        this.isResetEmailSend = true;\n      }, error => {\n        console.error('Email failed to send', error);\n      });\n      ;\n    }\n    toggleSignInForgotPw() {\n      this.isResetPw = !this.isResetPw;\n      this.isResetEmailSend = false;\n    }\n    //Redirects to signup page\n    createAccount() {\n      this.router.navigateByUrl('/sign-up');\n      this.dialogRef.close(null);\n    }\n    signIn() {\n      // Directly call Auth0's login method\n      this.auth.loginWithRedirect();\n    }\n    // public signIn(): void {\n    //     const user: User = new User();\n    //     user.email = this.emailAddress.value;\n    //     user.password = this.password.value;\n    //     user.secret = this.authCode?.value;\n    //     /**\n    //      * if signin success -> user data will be returned to app.component.ts\n    //      * \n    //      * Retrieves the 'user' item from localstorage and checks the usertype to correctly\n    //      * navigate to the corresponding URL.\n    //      */\n    //     this.authService.signIn(user).subscribe(\n    //         (user: User) => {\n    //             this.authService.user.subscribe((currentUser) => {\n    //                 if (!currentUser) return;\n    //                 console.log(currentUser);\n    //                 if (currentUser.userType == 'Professional') {\n    //                     this.dialogRef.close(currentUser);\n    //                     this.router.navigateByUrl('/projects').then(() => {\n    //                         window.location.reload();\n    //                     })\n    //                 } else if (currentUser.userType == 'Client') {\n    //                     this.dialogRef.close(currentUser);\n    //                     this.router.navigateByUrl('/').then(() => {\n    //                         window.location.reload();\n    //                     })\n    //                 } else {\n    //                     window.location.href = 'https://admin.mytechie.pro';\n    //                 }\n    //             })\n    //             /*\n    //             // window.location.reload();\n    //             console.log(user);\n    //             let userType = JSON.parse(localStorage.getItem(\"user\")!).userType\n    //             if(userType == \"Professional\") {\n    //                 let userLocalStorage = JSON.stringify(localStorage.getItem(\"user\"));\n    //                 let cookieName = \"user=\" + userLocalStorage + \";\" + \"domain=mytechie.pro;\";\n    //                 document.cookie = cookieName;\n    //                 console.log(cookieName);\n    //                 console.log(document.cookie);\n    //                 this.dialogRef.close(user);\n    //                 this.router.navigateByUrl('/projects')\n    //                 .then(() => {\n    //                     window.location.reload();\n    //                 });\n    //             } else if (userType == \"Client\") {\n    //                 let userLocalStorage = JSON.stringify(localStorage.getItem(\"user\"));\n    //                 let cookieName = \"user=\" + userLocalStorage + \";\" + \"domain=mytechie.pro;\";\n    //                 document.cookie = cookieName;\n    //                 console.log(cookieName);\n    //                 console.log(document.cookie);\n    //                 this.dialogRef.close(user);\n    //                 this.router.navigateByUrl('/')\n    //                 .then(() => {\n    //                     window.location.reload();\n    //                 });\n    //             } else {\n    //                 let user = JSON.stringify(localStorage.getItem(\"user\"));\n    //                 let cookieName = \"user=\" + user + \";\" + \"domain=mytechie.pro;\";\n    //                 document.cookie = cookieName;\n    //                 console.log(cookieName);\n    //                 console.log(document.cookie);\n    //                 window.location.href = \"https://admin.mytechie.pro\";\n    //             }*/\n    //         },\n    //         (error) => {\n    //             if (error.status == 401 && !this.authCode.value) {\n    //                 // failed due to bad auth\n    //                 document.getElementById(\"authCode\")!.style.display = \"block\";\n    //             } else {\n    //                 console.error(`Error in SignIn.signIn(): ${error}`, error);\n    //                 document.getElementById(\"failedLogin\")!.style.display = \"block\";\n    //             }\n    //         }\n    //     );\n    // }\n    getUserInfo() {\n      this.authService.getUserInfo().subscribe(userInfo => {\n        let userType = userInfo.userType;\n        if (userType == 'Professional') {\n          this.router.navigateByUrl('/projects').then(() => {});\n        } else if (userType == 'Client') {\n          this.router.navigateByUrl('/').then(() => {});\n        } else {\n          window.location.href = \"https://admin.mytechie.pro\";\n        }\n        this.dialogRef.close(userInfo);\n      }, error => {\n        console.error('Failed to fetch user info', error);\n      });\n    }\n  }\n  SignInComponent.ɵfac = function SignInComponent_Factory(t) {\n    return new (t || SignInComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.MatDialogRef));\n  };\n  SignInComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignInComponent,\n    selectors: [[\"app-sign-in\"]],\n    decls: 28,\n    vars: 25,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"row\", 2, \"min-width\", \"500px\", 3, \"formGroup\"], [1, \"col-sm-12\"], [\"matInput\", \"\", \"formControlName\", \"emailAddress\", \"required\", \"\", 3, \"placeholder\"], [\"class\", \"col-sm-12\", 4, \"ngIf\"], [\"id\", \"authCode\", 1, \"col-sm-12\", 2, \"display\", \"none\"], [\"matInput\", \"\", \"formControlName\", \"authCode\", 3, \"placeholder\"], [\"id\", \"failedLogin\", 2, \"display\", \"none\", \"text-align\", \"center\"], [\"style\", \"margin-top: 10px; font-size: 11px; text-align: center;\", 4, \"ngIf\"], [1, \"d-flex\", \"flex-column\", \"justify-content-end\"], [\"mat-button\", \"\", \"color\", \"accent\", 3, \"click\"], [1, \"d-flex\", \"p-2\", \"justify-content-end\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"class\", \"mat-primary\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\", 3, \"placeholder\"], [2, \"margin-top\", \"10px\", \"font-size\", \"11px\", \"text-align\", \"center\"], [\"mat-raised-button\", \"\", 1, \"mat-primary\", 3, \"disabled\", \"click\"]],\n    template: function SignInComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-dialog-content\", 1)(4, \"mat-form-field\", 2);\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, SignInComponent_mat_form_field_7_Template, 3, 3, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(8, \"mat-form-field\", 5);\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵpipe(10, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-error\", 7);\n        i0.ɵɵtext(12, \" Incorrect Credentials or Email address is not verified! \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, SignInComponent_p_13_Template, 3, 3, \"p\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-dialog-actions\", 9)(15, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function SignInComponent_Template_button_click_15_listener() {\n          return ctx.toggleSignInForgotPw();\n        });\n        i0.ɵɵtext(16);\n        i0.ɵɵpipe(17, \"translate\");\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function SignInComponent_Template_button_click_19_listener() {\n          return ctx.createAccount();\n        });\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 11)(23, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function SignInComponent_Template_button_click_23_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵtext(24);\n        i0.ɵɵpipe(25, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, SignInComponent_button_26_Template, 3, 4, \"button\", 13);\n        i0.ɵɵtemplate(27, SignInComponent_button_27_Template, 4, 6, \"button\", 13);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 11, \"Dictionary.SignIn\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(6, 13, \"Dictionary.Email\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isResetPw);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"placeholder\", i0.ɵɵpipeBind1(10, 15, \"Dictionary.AuthenticationCode\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.isResetEmailSend);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isResetPw ? i0.ɵɵpipeBind1(17, 17, \"Dictionary.SignIn\") : i0.ɵɵpipeBind1(18, 19, \"Dictionary.ForgotPassword\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(21, 21, \"Dictionary.CreateAccount\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(25, 23, \"Dictionary.Cancel\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isResetPw);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isResetPw);\n      }\n    },\n    directives: [i4.MatDialogTitle, i4.MatDialogContent, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatFormField, i6.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i7.NgIf, i5.MatError, i4.MatDialogActions, i8.MatButton],\n    pipes: [i9.TranslatePipe],\n    styles: [\".mat-dialog-actions[_ngcontent-%COMP%]{align-items:initial}\"]\n  });\n  return SignInComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}