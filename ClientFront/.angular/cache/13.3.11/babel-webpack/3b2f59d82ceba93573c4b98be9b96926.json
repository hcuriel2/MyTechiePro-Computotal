{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { ClientRequest } from 'src/app/shared/models/contact-us';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport { ContactUsDialogComponent } from './contact-us-dialog/contact-us-dialog/contact-us-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/shared/services/contact-us.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"src/app/shared/services/data.service\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@ngx-translate/core\";\nfunction ContactUsComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactUsComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ContactUsComponent = /*#__PURE__*/(() => {\n  class ContactUsComponent {\n    constructor(formBuilder, changeDetectorRef, contactService, dialog,\n    // use to pass data between two unrelated components\n    data) {\n      this.formBuilder = formBuilder;\n      this.changeDetectorRef = changeDetectorRef;\n      this.contactService = contactService;\n      this.dialog = dialog;\n      this.data = data;\n      this.isSubmitted = false;\n    }\n    ngOnInit() {\n      this.createForm();\n      // on init we want this component to listen to this string in data service\n      // which we will be using later to set up our confirmation message\n      // in ContactUsDialogComponent\n      this.data.currentMessage.subscribe(message => this.confirmationMessage = message);\n    }\n    // on submitting a contactus request, this function grabs all data from the form\n    // check email against a regex, it will also show in red in the form if email is not valid\n    // if email is valid it will post to mongo and give a thank you message\n    // if email is not valid it will give a enter valid email address message\n    onSubmit() {\n      // contact us confirmation logic\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.autoFocus = true;\n      let clientRequest = new ClientRequest();\n      clientRequest.firstName = this.firstName.value;\n      clientRequest.lastName = this.lastName.value;\n      clientRequest.email = this.emailAddress.value;\n      clientRequest.message = this.message.value;\n      // our email regex\n      var regexTester = new RegExp(\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\");\n      if (regexTester.test(this.emailAddress.value)) {\n        this.contactService.sendContactInfo(clientRequest).subscribe(clientRequest => {\n          this.newMessage(\"Submitted successfully\");\n          this.dialog.open(ContactUsDialogComponent, dialogConfig).afterClosed().subscribe(() => {\n            this.formGroup.disable(); // Disables input fields\n            this.isSubmitted = true; // Disables submission button\n          });\n        });\n      } else {\n        this.newMessage(\"Please input valid email address\");\n        this.dialog.open(ContactUsDialogComponent, dialogConfig).afterClosed();\n      }\n    }\n    // helper function to change the message of the confirmation dialog\n    newMessage(message) {\n      this.data.changeMessage(message);\n    }\n    createForm() {\n      this.firstName = new FormControl(null, Validators.required);\n      this.lastName = new FormControl(null, Validators.required);\n      this.emailAddress = new FormControl(null, [Validators.required, Validators.email]);\n      this.message = new FormControl(null, Validators.required);\n      this.formGroup = this.formBuilder.group({\n        firstName: this.firstName,\n        lastName: this.lastName,\n        emailAddress: this.emailAddress,\n        message: this.message\n      });\n      this.changeDetectorRef.markForCheck();\n    }\n  }\n  ContactUsComponent.ɵfac = function ContactUsComponent_Factory(t) {\n    return new (t || ContactUsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.ContactUsService), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.DataService));\n  };\n  ContactUsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactUsComponent,\n    selectors: [[\"app-contact-us\"]],\n    decls: 36,\n    vars: 22,\n    consts: [[1, \"container\"], [3, \"formGroup\"], [1, \"mt-3\"], [1, \"row\"], [\"appearance\", \"standard\"], [\"matInput\", \"\", \"formControlName\", \"firstName\", \"type\", \"text\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"lastName\", \"type\", \"text\", \"required\", \"\"], [\"matInput\", \"\", \"placeholder\", \"computotal@it.com\", \"formControlName\", \"emailAddress\", \"pattern\", \"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\", \"type\", \"text\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"message\", \"type\", \"text\", \"required\", \"\"], [\"align\", \"end\"], [\"mat-raised-button\", \"\", \"id\", \"contact-us-submit-btn\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n    template: function ContactUsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\")(2, \"mat-card-content\", 1)(3, \"mat-card-title\", 2);\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"mat-form-field\", 4)(8, \"mat-label\");\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"mat-form-field\", 4)(14, \"mat-label\");\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 3)(19, \"mat-form-field\", 4)(20, \"mat-label\");\n        i0.ɵɵtext(21);\n        i0.ɵɵpipe(22, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 7);\n        i0.ɵɵtemplate(24, ContactUsComponent_mat_error_24_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵtemplate(25, ContactUsComponent_mat_error_25_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 3)(27, \"mat-form-field\", 4)(28, \"mat-label\");\n        i0.ɵɵtext(29);\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"textarea\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"mat-card-actions\", 10)(33, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ContactUsComponent_Template_button_click_33_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(34);\n        i0.ɵɵpipe(35, \"translate\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        let tmp_5_0;\n        let tmp_6_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 10, \"Dictionary.ContactUs\"), \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 12, \"Label.FirstName\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 14, \"Label.LastName\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(22, 16, \"Label.Email\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.formGroup.get(\"emailAddress\")) == null ? null : tmp_5_0.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_6_0 = ctx.formGroup.get(\"emailAddress\")) == null ? null : tmp_6_0.hasError(\"email\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(30, 18, \"Label.Message\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.isSubmitted);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(35, 20, \"Dictionary.Submit\"), \" \");\n      }\n    },\n    directives: [i5.MatCard, i5.MatCardContent, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatCardTitle, i6.MatFormField, i6.MatLabel, i7.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i1.PatternValidator, i8.NgIf, i6.MatError, i5.MatCardActions, i9.MatButton],\n    pipes: [i10.TranslatePipe],\n    styles: [\"mat-card[_ngcontent-%COMP%]{padding:30px;margin:auto;max-width:500px}mat-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{margin:0}.container[_ngcontent-%COMP%]{margin-top:100px}.row[_ngcontent-%COMP%]{display:grid}\"]\n  });\n  return ContactUsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}