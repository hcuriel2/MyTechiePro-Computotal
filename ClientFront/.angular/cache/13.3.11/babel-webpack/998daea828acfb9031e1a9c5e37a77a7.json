{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { plainToClass } from 'class-transformer';\nimport { first, map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { ResetPassword } from '../models/resetPassword';\nimport { User } from '../models/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.API_URL = `${environment.apiEndpoint}/users`;\n    }\n    getAll() {\n      return this.httpClient.get(this.API_URL).pipe(first(), map(users => plainToClass(User, users)));\n    }\n    getById(id) {\n      return this.httpClient.get(`${this.API_URL}/${id}`).pipe(first(), map(user => plainToClass(User, user)));\n    }\n    getAllClients() {\n      return this.httpClient.get(`${this.API_URL}/clients`).pipe(first(), map(users => plainToClass(User, users)));\n    }\n    getAllProfessionals() {\n      return this.httpClient.get(`${this.API_URL}/professionals`).pipe(first(), map(users => plainToClass(User, users)));\n    }\n    getAllProfessionalsBySkill(skill, rnge, lat, lng) {\n      const params = new HttpParams().set('skill', skill).set('range', rnge.toString()).set('lat', lat.toString()).set('lng', lng.toString());\n      return this.httpClient.get(`${this.API_URL}/professionals`, {\n        params\n      }).pipe(first(), map(users => plainToClass(User, users)));\n    }\n    // public getAllProfessionalsBySkill(skill: string, rnge: number, lat: number, lng:number): Observable<User[]> {   \n    //     //Create object for filtering users by SKILL and LOCATION\n    //     let filterReq = {\n    //         skill: \"\",\n    //         lat: 0,\n    //         lng: 0,\n    //         rnge: 10\n    //     };\n    //     filterReq.skill = skill;\n    //     filterReq.rnge = rnge;\n    //     filterReq.lat = lat;\n    //     filterReq.lng = lng;\n    //     let userObj = JSON.parse(localStorage.getItem(\"user\")!);\n    //     //receive the techie range selected by the user from local storage.\n    //     // if (localStorage.getItem(\"range\")) {\n    //     //     console.log(\"list of range\");\n    //     //     console.log(localStorage.getItem(\"range\"));\n    //     //     filterReq.rnge = parseInt(localStorage.getItem(\"range\")!, 10);\n    //     // }\n    //     // if (userObj.address.lat) {\n    //     //     filterReq.lat = userObj.address.lat;\n    //     //     filterReq.lng = userObj.address.lng;\n    //     // }\n    //     let filterString = JSON.stringify(filterReq)\n    //     //send created filter object to backend and recieve list of filtered techies.\n    //     return this.httpClient\n    //         .get<User[]>(`${this.API_URL}/professionals/${filterString}`)\n    //         .pipe(\n    //             first(),\n    //             map((users: User[]) => plainToClass(User, users))\n    //         );\n    // }\n    resetPassword(password, userId) {\n      return this.httpClient.put(`${this.API_URL}/reset/${userId}`, password).pipe(first(), map(password => plainToClass(ResetPassword, password)));\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}