{"ast":null,"code":"import { FormControl, Validators } from \"@angular/forms\";\nimport { MatSnackBarConfig } from \"@angular/material/snack-bar\";\nimport { Subject } from \"rxjs\";\nimport { first, takeUntil } from \"rxjs/operators\";\nimport { Constants } from \"src/app/shared/constants/constants\";\nimport { UserType } from \"src/app/shared/enums/user-type.enum\";\nimport { Address } from \"src/app/shared/models/address\";\nimport { User } from \"src/app/shared/models/user\";\nimport { passwordValidator } from \"./password.directive\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/auth.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@ngx-translate/core\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"src/app/shared/services/category.service\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"ngx-mask\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\nimport * as i14 from \"ngx-google-places-autocomplete\";\nimport * as i15 from \"@angular/material/button\";\nfunction SignUpComponent_mat_card_title_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card-title\", 24)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, \"Dictionary.SignUp\"));\n  }\n}\nfunction SignUpComponent_mat_card_title_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card-title\", 24)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, \"Label.JoinPro\"));\n  }\n}\nfunction SignUpComponent_mat_error_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Warning.PasswordRequired\"), \" \");\n  }\n}\nfunction SignUpComponent_mat_error_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Warning.PasswordComplexity\"), \" \");\n  }\n}\nfunction SignUpComponent_mat_error_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Warning.PasswordTooShort\"), \" \");\n  }\n}\nfunction SignUpComponent_mat_error_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Warning.PasswordTooLong\"), \" \");\n  }\n}\nfunction SignUpComponent_mat_error_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Warning.PasswordNotMatch\"), \" \");\n  }\n}\nfunction SignUpComponent_div_62_div_25_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36)(1, \"label\");\n    i0.ɵɵelement(2, \"input\", 37);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const skill_r11 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", skill_r11.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", skill_r11.name, \"\");\n  }\n}\nfunction SignUpComponent_div_62_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelement(1, \"br\");\n    i0.ɵɵelementStart(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, SignUpComponent_div_62_div_25_div_4_Template, 4, 2, \"div\", 35);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r9 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(category_r9.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", category_r9.services);\n  }\n}\nfunction SignUpComponent_div_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 26)(6, \"mat-form-field\", 6)(7, \"mat-label\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-select\", 27)(11, \"mat-option\", 28);\n    i0.ɵɵtext(12, \"Hour\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-option\", 29);\n    i0.ɵɵtext(14, \"Flat fee\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(15, \"div\", 26)(16, \"mat-form-field\", 6)(17, \"mat-label\");\n    i0.ɵɵtext(18);\n    i0.ɵɵpipe(19, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 30);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelement(21, \"br\");\n    i0.ɵɵelementStart(22, \"h2\");\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(25, SignUpComponent_div_62_div_25_Template, 5, 2, \"div\", 31);\n    i0.ɵɵelement(26, \"br\");\n    i0.ɵɵelementStart(27, \"div\", 5)(28, \"mat-form-field\", 6)(29, \"mat-label\");\n    i0.ɵɵtext(30);\n    i0.ɵɵpipe(31, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"textarea\", 32);\n    i0.ɵɵtext(33, \"              \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"div\", 5)(35, \"mat-form-field\", 6)(36, \"mat-label\");\n    i0.ɵɵtext(37);\n    i0.ɵɵpipe(38, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(39, \"input\", 33);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 11, \"Label.ProDetails\"));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 13, \"Label.RateType\"));\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(19, 15, \"Label.RateValue\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 17, \"Label.SelectApplicableServices\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.categories);\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"width\", 400, \"px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(31, 19, \"Dictionary.Bio\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵstyleProp(\"width\", 400, \"px\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(38, 21, \"Label.Website\"));\n  }\n}\nexport let SignUpComponent = /*#__PURE__*/(() => {\n  class SignUpComponent {\n    constructor(authService, snackBar, translateService, changeDetectorRef, formBuilder, route, router, categoryService) {\n      this.authService = authService;\n      this.snackBar = snackBar;\n      this.translateService = translateService;\n      this.changeDetectorRef = changeDetectorRef;\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.categoryService = categoryService;\n      this.skills = {};\n      this.userAddress = \"\";\n      this.userLatitude = 0;\n      this.userLongitude = 0;\n      this.userPlaceId = \"\";\n      this.userCountry = \"\";\n      this.userPostal = \"\";\n      this.userCity = \"\";\n      this.userStreetAddress = \"\";\n      this.options = {\n        bounds: undefined,\n        fields: [\"ALL\"],\n        strictBounds: false,\n        types: [\"address\"],\n        origin: undefined,\n        componentRestrictions: undefined\n      };\n      this.destroyed = new Subject();\n      this.forPro = this.route.snapshot.queryParams.forPro === \"true\";\n    }\n    ngOnInit() {\n      this.createForm();\n      if (this.forPro) {\n        this.categoryService.getAll().pipe(first()).subscribe(categories => {\n          this.categories = categories;\n          this.changeDetectorRef.markForCheck();\n          this.populateSkills();\n        }, error => {\n          console.error(`Error in CarrierLaneRate.getStaticData(): ${error}`, error);\n        });\n      }\n    }\n    /**\n     * Populates skill form controls for skill selection.\n     */\n    populateSkills() {\n      for (var i = 0; i < this.categories.length; i++) {\n        for (var j = 0; j < this.categories[i].services.length; j++) {\n          this.skills[this.categories[i].services[j].name] = {\n            skill: this.categories[i].services[j].name,\n            isProSkill: new FormControl(null)\n          };\n          this.formGroup.addControl(this.categories[i].services[j].name, this.skills[this.categories[i].services[j].name][\"isProSkill\"]);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.destroyed.next();\n      this.destroyed.complete();\n    }\n    // User information is saved to the backend, such as location, first and last name etc.\n    onSubmit() {\n      const newUser = new User();\n      const userAddress = new Address();\n      newUser.firstName = this.firstName.value;\n      newUser.lastName = this.lastName.value;\n      newUser.phoneNumber = this.phoneNumber.value;\n      newUser.email = this.emailAddress.value;\n      newUser.password = this.password.value;\n      newUser.userType = this.forPro ? UserType.Professional : UserType.Client;\n      userAddress.city = this.city.value;\n      userAddress.country = this.country.value;\n      userAddress.street = this.street.value;\n      userAddress.postalCode = this.postalCode.value;\n      newUser.address = userAddress;\n      newUser.company = this.companyName.value;\n      userAddress.lat = this.userLatitude;\n      userAddress.lng = this.userLongitude;\n      userAddress.placeid = this.userPlaceId;\n      //User data used in address checking\n      // newUser.lat = this.userLatitude\n      // newUser.lng = this.userLongitude\n      // newUser.placeid = this.userPlaceId\n      if (this.forPro) {\n        newUser.skills = [];\n        // Iterates through JSON to find selected skills\n        Object.keys(this.skills).forEach(element => {\n          if (this.skills[element].isProSkill.value) {\n            newUser.skills.push(this.skills[element].skill);\n          }\n        });\n        newUser.bio = this.bio.value;\n        newUser.unitPrice = Number(this.unitPrice.value);\n        newUser.unitType = this.unitType.value;\n        newUser.website = this.website.value;\n      }\n      this.authService.registerUser(newUser).pipe(first()).subscribe(user => {\n        